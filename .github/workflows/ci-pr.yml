name: CI / Build Memos (PR)

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'memos/**'
      - 'uploads/**'
      - 'notebooks/**'
      - 'docs/notebooks.json'
      - 'docs/assets/js/**'
      - 'docs/index.html'
      - '.github/workflows/ci-pr.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install TeX Live & unzip
      run: |
        sudo apt-get update
        sudo apt-get install -y texlive-latex-extra texlive-publishers latexmk unzip

    - name: Unzip memo ZIPs
      run: |
        # Unzip any ZIP files placed directly in memos/
        for z in memos/*.zip; do
          if [[ -f "$z" ]]; then
            name=$(basename "$z" .zip)
            mkdir -p "memos/$name"
            echo "Unzipping $z to memos/$name/"
            unzip -o "$z" -d "memos/$name"
          fi
        done
        # Unzip any ZIPs inside memo subfolders
        for dir in memos/*/ ; do
          for z in "$dir"/*.zip; do
            if [[ -f "$z" ]]; then
              echo "Unzipping $z to $dir"
              unzip -o "$z" -d "$dir"
            fi
          done
        done

    - name: Compile LaTeX memos to PR check directory
      run: |
        mkdir -p docs/pr_check
        # Compile each memo directory, naming PDF after the folder
        for dir in memos/*/ ; do
          name=$(basename "$dir")
          echo "Processing memo $name"
          (
            cd "$dir"
            texfile=$(ls *.tex | head -n1)
            echo "Compiling $texfile as $name.pdf"
            latexmk -pdf \
              -jobname="$name" \
              -output-directory="../../docs/pr_check" \
              "$texfile"
          )
        done
        # Clean auxiliary files, keep only PDFs
        find docs/pr_check -type f ! -name '*.pdf' -delete

    - name: Set up Python for notebook build
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install nbconvert toolchain
      run: |
        python -m pip install --upgrade pip
        pip install nbconvert==7.* nbformat==5.* jinja2==3.* pygments==2.* pandocfilters

    - name: Convert .ipynb to HTML in PR check directory
      run: |
        set -e
        mkdir -p docs/pr_check
        shopt -s nullglob
        for nb in notebooks/*.ipynb; do
          echo "Converting $nb"
          jupyter nbconvert --to html --output-dir "docs/pr_check" "$nb"
        done

    - name: Upload PR check artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pr-check-outputs
        path: docs/pr_check/*
        if-no-files-found: ignore

    - name: Commit PR check files to branch
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add docs/pr_check
        git commit -m "Add PR check outputs (PDFs and HTML)" || echo "No changes to commit"
        git push origin HEAD:${{ github.head_ref }}
